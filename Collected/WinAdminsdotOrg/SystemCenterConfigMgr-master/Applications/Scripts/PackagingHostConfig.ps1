function Remove-RegistryKey{	<#	    .DESCRIPTION            Remove a registry key         .PARAMETER RegistryPath            Path to registry key        .PARAMETER KeyName            Name of key        .OUTPUTS            Returns nothing	    .EXAMPLE            Update-RegistryKey 'HKCU:\Software\ScriptingGuys\Scripts' 'Version' '1'	#>    param (	    $RegistryPath,	    $KeyName	)    Write-Host "Removing registry item for: $KeyName"    IF(!(Test-Path $RegistryPath))    {        #New-Item -Path $RegistryPath -Force | Out-Null        Remove-ItemProperty -Path $RegistryPath -Name $KeyName -Force | Out-Null    }    ELSE    {        Remove-ItemProperty -Path $RegistryPath -Name $KeyName -Force | Out-Null    }    Return}function Update-RegistryKey{	<#	    .DESCRIPTION            Creates a registry key if it does not exist, and updates if it does        .PARAMETER RegistryPath            Path to registry key        .PARAMETER KeyName            Name of key        .PARAMETER KeyValue            Value to set        .OUTPUTS            Returns nothing	    .EXAMPLE            Update-RegistryKey 'HKCU:\Software\ScriptingGuys\Scripts' 'Version' '1'	#>    param (	    $RegistryPath,	    $KeyName,	    $KeyValue,        $KeyType	)    Write-Host "Updating registry for: $KeyName"    IF(!(Test-Path $RegistryPath))    {        New-Item -Path $RegistryPath -Force | Out-Null        New-ItemProperty -Path $RegistryPath -Name $KeyName -Value $KeyValue -PropertyType $KeyType -Force | Out-Null    }    ELSE    {        New-ItemProperty -Path $RegistryPath -Name $KeyName -Value $KeyValue -PropertyType $KeyType -Force | Out-Null    }    Return}[string]$RegistryPath=""[string]$KeyName=""[string]$KeyValue=""[string]$KeyType=""#Disable Advertising ID$RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo"$KeyName = "Enabled"$KeyValue = "0"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable IE First Run$RegistryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main"$KeyName = "DisableFirstRunCustomize"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable Master Browser$RegistryPath = "HKLM:\SYSTEM\CurrentControlSet\Services\Browser\Parameters"$KeyName = "MaintainServerList"$KeyValue = "No"$KeyType = "STRING"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$KeyName = "IsDomainMaster"$KeyValue = "No"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable One Drive$RegistryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\OneDrive"$KeyName = "DisableFileSyncNGSC"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable Store Cloud Content$RegistryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\CloudContent"$KeyName = "DisableWindowsConsumerFeatures"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$KeyName = "DisableSoftLanding"$KeyValue = "1"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable System Restore$RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore"$KeyName = "DisableSR"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable Telmetry$RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SystemRestore"$KeyName = "AllowTelemetry"$KeyValue = "0"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable TypingTelmetry$RegistryPath = "HKCU:\Control Panel\International\User Profile"$KeyName = "HttpAcceptLanguageOptOut"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable User Generated Feedback$RegistryPath = "HKCU:\Software\Microsoft\Siuf\Rules"$KeyName = "PeriodInNanoSeconds"$KeyValue = "0"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$RegistryPath = "HKCU:\Software\Microsoft\Siuf\Rules"$KeyName = "NumberOfSIUFInPeriod"$KeyValue = "0"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable Telmetry$RegistryPath = "HKLM:\SOFTWARE\Microsoft\WcmSvc\wifinetworkmanager\config"$KeyName = "AutoConnectAllowedOEM"$KeyValue = "0"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#Disable Windows Update$RegistryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate"$KeyName = "DisableWindowsUpdateAccess"$KeyValue = "1"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$RegistryPath = "HKLM:\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU"$KeyName = "UseWUServer"$KeyValue = "1"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$KeyName = "NoAutoUpdate"$KeyValue = "1"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType#WMI Configuration$RegistryPath = "HKLM:\SYSTEM\CurrentControlSet\Services\Winmgmt"$KeyName = "Group"$KeyValue = "COM Infrastructure"$KeyType = "STRING"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyType$KeyName = "Type"$KeyValue = "10"$KeyType = "DWORD"Update-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName -KeyValue $KeyValue -KeyType $KeyTypewinmgmt -standalonehost#Disable Windows DefenderSet-MpPreference -DisableArchiveScanning  $True
Set-MpPreference -DisableAutoExclusions  $False
Set-MpPreference -DisableBehaviorMonitoring  $True
Set-MpPreference -DisableBlockAtFirstSeen  $False
Set-MpPreference -DisableCatchupFullScan  $True
Set-MpPreference -DisableCatchupQuickScan  $True
Set-MpPreference -DisableEmailScanning  $True
Set-MpPreference -DisableIntrusionPreventionSystem $True
Set-MpPreference -DisableIOAVProtection  $True
Set-MpPreference -DisablePrivacyMode  $False
Set-MpPreference -DisableRealtimeMonitoring  $True
Set-MpPreference -DisableRemovableDriveScanning $True
Set-MpPreference -DisableRestorePoint  $True
Set-MpPreference -DisableScanningMappedNetworkDrivesForFullScan  $True
Set-MpPreference -DisableScanningNetworkFiles  $True
Set-MpPreference -DisableScriptScanning  $True
Set-MpPreference -ScanOnlyIfIdleEnabled  $True#Remove-WindowsFeature Windows-Defender, Windows-Defender-GUI#Remove Defender Registry Entries$RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"$KeyName = "Windows Defender"Remove-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName $RegistryPath = "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run"Remove-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName$RegistryPath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run"$KeyName = "Windows Defender"Remove-RegistryKey -RegistryPath $RegistryPath -KeyName $KeyName #Delivery Optimization$Service = Get-Service -Name "DoSvc"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Diagnostic Policy#Breaks App-V Sequencer#$Service = Get-Service -Name "DPS"#Set-Service -InputObject $Service -StartupType Disabled#$Service = Get-Service -Name "WdiServiceHost"#Set-Service -InputObject $Service -StartupType Disabled#GeoLocation$Service = Get-Service -Name "lfsvc"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Volume Shadow#Breaks App-V Sequencer#$Service = Get-Service -Name "VSS"#Set-Service -InputObject $Service -StartupType Disabled$Service = Get-Service -Name "swprv"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Store Connection Broker#Breaks App-V Sequencer#$Service = Get-Service -Name "NcbService"#Set-Service -InputObject $Service -StartupType Disabled#Print Spooler$Service = Get-Service -Name "Spooler"Set-Service -InputObject $Service -StartupType Disabled#Program Compatability Assistant$Service = Get-Service -Name "PcaSvc"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Disable Auto Play$Service = Get-Service -Name "ShellHWDetection"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#SSDP Discovery#Breaks App-V Sequencer#$Service = Get-Service -Name "SSDPSRV"#Set-Service -InputObject $Service -StartupType Disabled#Themes$Service = Get-Service -Name "Themes"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Audio$Service = Get-Service -Name "Audiosrv"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()$Service = Get-Service -Name "AudioEndpointBuilder"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Search$Service = Get-Service -Name "WSearch"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Windows Updates$Service = Get-Service -Name "wuauserv"Set-Service -InputObject $Service -StartupType Disabled$Service.Stop()#Windows Defender$key = [Microsoft.Win32.Registry]::LocalMachine.OpenSubKey("SYSTEM\CurrentControlSet\Services\WinDefend\",[Microsoft.Win32.RegistryKeyPermissionCheck]::ReadWriteSubTree,[System.Security.AccessControl.RegistryRights]::ChangePermissions)
$acl = $key.GetAccessControl()
$rule = New-Object System.Security.AccessControl.RegistryAccessRule ("Administrators","FullControl","Allow")
$acl.SetAccessRule($rule)
$key.SetAccessControl($acl)$Service = Get-Service -Name "WinDefend"Set-Service -InputObject $Service -StartupType DisabledReturn